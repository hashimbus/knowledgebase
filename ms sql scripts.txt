----SERVER-----
-- Имена сервера и экземпляра 
Select @@SERVERNAME as [Server\Instance]; 
-- версия SQL Server 
Select @@VERSION as SQLServerVersion; 
-- экземпляр SQL Server 
Select @@ServiceName AS ServiceInstance;
-- Текущая БД (БД, в контексте которой выполняется запрос)
Select DB_NAME() AS CurrentDB_Name;


-----LAST RESTART Server-----
SELECT  @@Servername AS ServerName ,
        create_date AS  ServerStarted ,
        DATEDIFF(s, create_date, GETDATE()) / 86400.0 AS DaysRunning ,
        DATEDIFF(s, create_date, GETDATE()) AS SecondsRunnig
FROM    sys.databases
WHERE   name = 'tempdb'; 
GO


-----LAST BACKUP-----
SELECT  @@Servername AS ServerName, d.Name AS DBName, MAX(b.backup_finish_date) AS LastBackupCompleted
FROM    sys.databases d
        LEFT OUTER JOIN msdb..backupset b
                    ON b.database_name = d.name
                       AND b.[type] = 'D'
GROUP BY d.Name
ORDER BY d.Name;

-----BACKUP STATUS-----
SELECT
	[command]
	,[start_time]
	,[percent_complete]
	,[estimated_completion_time] / 60000. AS [estimated_completion_time_min]
FROM sys.dm_exec_requests
WHERE command = 'BACKUP DATABASE'

---USERS-----
--- Сопостовление сидов на  кластере
select U.Name, L.sid AS 'Login SID', U.sid AS 'USER SID' from sys.sql_logins AS L
	JOIN sys.database_principals AS U
		on l.name=u.name

/*
		IF  EXISTS (SELECT * FROM sys.server_principals WHERE name = N'monitoring')
DROP LOGIN [monitoring]
GO

CREATE LOGIN [monitoringscom] WITH PASSWORD=N'sxfgehz571', DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF, 
SID = 0xA11DA1F628E0994A8EBE962DBD45FA0B
GO
*/







-----BASE------
--Размер базы
select DB_Name(database_id) as [Database Name], SUM(size * 8.0 / 1024) as [Size, Mb]
from sys.master_files
WHERE database_id = DB_ID()
GROUP BY database_id

-- database id
SELECT * FROM sys.databases

-----INFO BASE-----=-
EXEC sp_helpdb; 
--OR 
SELECT  @@SERVERNAME AS Server ,
        d.name AS DBName ,
        recovery_model_Desc AS RecoveryModel ,
        create_date ,
        compatibility_level ,
        m.physical_name AS FileName
FROM    sys.databases d
        JOIN sys.master_files m ON d.database_id = m.database_id
WHERE   m.[type] = 0 -- data files only
ORDER BY d.name; 
GO



-----FILE BD-----
SELECT  @@Servername AS Server ,
        DB_NAME() AS DB_Name ,
        File_id ,
        Type_desc ,
        Name ,
        LEFT(Physical_Name, 1) AS Drive ,
        Physical_Name ,
        RIGHT(physical_name, 3) AS Ext ,
        Size ,
        Growth
FROM    sys.database_files
ORDER BY File_id; 

-----FREE SPACE BD-------Просмотр места на БД
SELECT 
    [TYPE] = A.TYPE_DESC
    ,[FILE_Name] = A.name
    ,[FILEGROUP_NAME] = fg.name
    ,[File_Location] = A.PHYSICAL_NAME
    ,[FILESIZE_MB] = CONVERT(DECIMAL(10,2),A.SIZE/128.0)
    ,[USEDSPACE_MB] = CONVERT(DECIMAL(10,2),A.SIZE/128.0 - ((SIZE/128.0) - CAST(FILEPROPERTY(A.NAME, 'SPACEUSED') AS INT)/128.0))
    ,[FREESPACE_MB] = CONVERT(DECIMAL(10,2),A.SIZE/128.0 - CAST(FILEPROPERTY(A.NAME, 'SPACEUSED') AS INT)/128.0)
    ,[FREESPACE_%] = CONVERT(DECIMAL(10,2),((A.SIZE/128.0 - CAST(FILEPROPERTY(A.NAME, 'SPACEUSED') AS INT)/128.0)/(A.SIZE/128.0))*100)
    ,[AutoGrow] = 'By ' + CASE is_percent_growth WHEN 0 THEN CAST(growth/128 AS VARCHAR(10)) + ' MB -' 
        WHEN 1 THEN CAST(growth AS VARCHAR(10)) + '% -' ELSE '' END 
        + CASE max_size WHEN 0 THEN 'DISABLED' WHEN -1 THEN ' Unrestricted' 
            ELSE ' Restricted to ' + CAST(max_size/(128*1024) AS VARCHAR(10)) + ' GB' END 
        + CASE is_percent_growth WHEN 1 THEN ' [autogrowth by percent, BAD setting!]' ELSE '' END
FROM sys.database_files A LEFT JOIN sys.filegroups fg ON A.data_space_id = fg.data_space_id 
order by A.TYPE desc, A.NAME; 

-----INFO AUTO GROW-----
DECLARE @TraceFileName sysname
SELECT @TraceFileName = path  FROM sys.traces WHERE id = 1
 SELECT 
         DB_NAME(DatabaseID) AS DatabaseName,
         CASE WHEN EventClass = 92 THEN 'Data File' ELSE 'Log File' END AS FileType,
         CONVERT(varchar(12), StartTime, 112) AS GrowthDate,
         SUM((IntegerData*8)/1024) AS GrowthInMB
    FROM sys.fn_trace_gettable(@TraceFileName, default)
   WHERE EventClass IN (92, 93) and DatabaseName = 'NAME'
GROUP BY DB_NAME(DatabaseID), EventClass, CONVERT(varchar(12), StartTime, 112)
ORDER BY GrowthDate desc


----- Последнее использование TAB -----
-- Чтение/запись таблицы
-- Кучи не рассматриваются, у них нет индексов
-- Только те таблицы, к которым обращались после запуска SQL Server
SELECT  @@ServerName AS ServerName ,
        DB_NAME() AS DBName ,
        OBJECT_NAME(ddius.object_id) AS TableName ,
        SUM(ddius.user_seeks + ddius.user_scans + ddius.user_lookups)
                                                               AS  Reads ,
        SUM(ddius.user_updates) AS Writes ,
        SUM(ddius.user_seeks + ddius.user_scans + ddius.user_lookups
            + ddius.user_updates) AS [Reads&Writes] ,
        ( SELECT    DATEDIFF(s, create_date, GETDATE()) / 86400.0
          FROM      master.sys.databases
          WHERE     name = 'tempdb'
        ) AS SampleDays ,
        ( SELECT    DATEDIFF(s, create_date, GETDATE()) AS SecoundsRunnig
          FROM      master.sys.databases
          WHERE     name = 'tempdb'
        ) AS SampleSeconds
FROM    sys.dm_db_index_usage_stats ddius
        INNER JOIN sys.indexes i ON ddius.object_id = i.object_id
                                     AND i.index_id = ddius.index_id
WHERE    OBJECTPROPERTY(ddius.object_id, 'IsUserTable') = 1
        AND ddius.database_id = DB_ID()
GROUP BY OBJECT_NAME(ddius.object_id)
ORDER BY [Reads&Writes] DESC;
GO

-----JOBS-----
 use msdb
 select * from sysjobs

 select * from dbo.sysjobsteps
 order by step_name



-----Linked SERVERS-----

EXEC sp_helpserver; 
--OR 
EXEC sp_linkedservers; 
--OR 
SELECT  @@SERVERNAME AS Server ,
        Server_Id AS  LinkedServerID ,
        name AS LinkedServer ,
        Product ,
        Provider ,
        Data_Source ,
        Modify_Date
FROM    sys.servers
ORDER BY name; 
GO


-----ALWAYS ON ------
Select	
		AG. name					AS 'AvalibityGroup',			--Наименование группы доступности
		ADC.database_name			AS 'Database',					--Имя базы данных, включенную в отказоустойчивость
		AR. replica_server_name		AS 'ReplicaPartner',			--Сервер-участник группы доступности
		AGS.primary_replica			AS 'PrimaryServer',				--Первичный сервер
		AR. availability_mode_desc	AS 'AvailabilityMode',			--Режим доступности
		AR. failover_mode_desc		AS 'FailoverMode',				--Режим отказоустойчивости
		AGC.health_check_timeout	AS 'HealthCheckTimeout',		--Время проверки
		AGL.dns_name				AS 'Listener'					--Листенер
			from	 sys.availability_databases_cluster		AS ADC	
				JOIN sys.availability_group_listeners		AS AGL
						on ADC.group_id=AGL.group_id
				JOIN sys.availability_groups				AS AG
						on ADC.group_id=AG.group_id
				JOIN sys.availability_groups_cluster		AS AGC
						on ADC.group_id=AGC.group_id
				JOIN sys.availability_replicas				AS AR
						on ADC.group_id=AR.group_id
				JOIN sys.dm_hadr_availability_group_states	AS AGS
						on ADC.group_id=AGS.group_id
	where AR. replica_server_name<>AGS.primary_replica
	order by 'ReplicaPartner' ASC
	
	
	